[{"C:\\Users\\vamik\\Documents\\mp\\src\\index.tsx":"1","C:\\Users\\vamik\\Documents\\mp\\src\\serviceWorker.js":"2","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Footer\\Footer.tsx":"3","C:\\Users\\vamik\\Documents\\mp\\src\\components\\TopBar\\TopBar.tsx":"4","C:\\Users\\vamik\\Documents\\mp\\src\\components\\PrivacyTerms\\PrivacyTerms.tsx":"5","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Debug\\Debug.tsx":"6","C:\\Users\\vamik\\Documents\\mp\\src\\components\\App\\index.tsx":"7","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Home\\index.tsx":"8","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\LoginModal.tsx":"9","C:\\Users\\vamik\\Documents\\mp\\src\\utils\\index.ts":"10","C:\\Users\\vamik\\Documents\\mp\\src\\components\\App\\App.tsx":"11","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Home\\Home.tsx":"12","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\PasswordModal.tsx":"13","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\ErrorModal.tsx":"14","C:\\Users\\vamik\\Documents\\mp\\src\\components\\SubscribeButton\\SubscribeButton.tsx":"15","C:\\Users\\vamik\\Documents\\mp\\src\\utils\\generateName.ts":"16","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\VBrowserModal.tsx":"17","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\SubscribeModal.tsx":"18","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\MultiStreamModal.tsx":"19","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Settings\\SettingsTab.tsx":"20","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Controls\\Controls.tsx":"21","C:\\Users\\vamik\\Documents\\mp\\src\\components\\SearchComponent\\SearchComponent.tsx":"22","C:\\Users\\vamik\\Documents\\mp\\src\\components\\ComboBox\\ComboBox.tsx":"23","C:\\Users\\vamik\\Documents\\mp\\src\\components\\TopBar\\index.tsx":"24","C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\index.ts":"25","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Settings\\index.tsx":"26","C:\\Users\\vamik\\Documents\\mp\\src\\components\\VideoChat\\index.tsx":"27","C:\\Users\\vamik\\Documents\\mp\\src\\utils\\examples.ts":"28","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Chat\\index.tsx":"29","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Settings\\LocalSettings.tsx":"30","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\PermanentRoomModal.tsx":"31","C:\\Users\\vamik\\Documents\\mp\\src\\components\\SearchResult\\SearchResult.tsx":"32","C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\base.ts":"33","C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\events.ts":"34","C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\VBrowser.tsx":"35","C:\\Users\\vamik\\Documents\\mp\\src\\components\\VideoChat\\VideoChat.tsx":"36","C:\\Users\\vamik\\Documents\\mp\\src\\components\\Chat\\Chat.tsx":"37","C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\data.ts":"38"},{"size":2954,"mtime":1617810846092,"results":"39","hashOfConfig":"40"},{"size":5098,"mtime":1617810846155,"results":"41","hashOfConfig":"40"},{"size":427,"mtime":1617882834833,"results":"42","hashOfConfig":"40"},{"size":8072,"mtime":1617884040671,"results":"43","hashOfConfig":"40"},{"size":4360,"mtime":1617810846605,"results":"44","hashOfConfig":"40"},{"size":1125,"mtime":1617810846376,"results":"45","hashOfConfig":"40"},{"size":33,"mtime":1617810846261,"results":"46","hashOfConfig":"40"},{"size":31,"mtime":1617810846451,"results":"47","hashOfConfig":"40"},{"size":3553,"mtime":1617810846491,"results":"48","hashOfConfig":"40"},{"size":7982,"mtime":1617891666851,"results":"49","hashOfConfig":"40"},{"size":58105,"mtime":1617810846244,"results":"50","hashOfConfig":"40"},{"size":4792,"mtime":1617884240912,"results":"51","hashOfConfig":"40"},{"size":1094,"mtime":1617810846524,"results":"52","hashOfConfig":"40"},{"size":652,"mtime":1617810846474,"results":"53","hashOfConfig":"40"},{"size":1238,"mtime":1617810846718,"results":"54","hashOfConfig":"40"},{"size":41812,"mtime":1617810846914,"results":"55","hashOfConfig":"40"},{"size":4363,"mtime":1617810846572,"results":"56","hashOfConfig":"40"},{"size":5965,"mtime":1617810846555,"results":"57","hashOfConfig":"40"},{"size":1148,"mtime":1617810846506,"results":"58","hashOfConfig":"40"},{"size":9641,"mtime":1617810846686,"results":"59","hashOfConfig":"40"},{"size":5198,"mtime":1617810846348,"results":"60","hashOfConfig":"40"},{"size":4433,"mtime":1617810846624,"results":"61","hashOfConfig":"40"},{"size":2317,"mtime":1617810846324,"results":"62","hashOfConfig":"40"},{"size":65,"mtime":1617883807630,"results":"63","hashOfConfig":"40"},{"size":2638,"mtime":1617810846821,"results":"64","hashOfConfig":"40"},{"size":122,"mtime":1617810846700,"results":"65","hashOfConfig":"40"},{"size":41,"mtime":1617810846883,"results":"66","hashOfConfig":"40"},{"size":1423,"mtime":1617810846899,"results":"67","hashOfConfig":"40"},{"size":31,"mtime":1617810846303,"results":"68","hashOfConfig":"40"},{"size":2038,"mtime":1617810846666,"results":"69","hashOfConfig":"40"},{"size":2374,"mtime":1617810846540,"results":"70","hashOfConfig":"40"},{"size":3215,"mtime":1617810846645,"results":"71","hashOfConfig":"40"},{"size":9565,"mtime":1617810846785,"results":"72","hashOfConfig":"40"},{"size":2286,"mtime":1617810846810,"results":"73","hashOfConfig":"40"},{"size":9800,"mtime":1617810846773,"results":"74","hashOfConfig":"40"},{"size":11542,"mtime":1617810846869,"results":"75","hashOfConfig":"40"},{"size":7694,"mtime":1617810846283,"results":"76","hashOfConfig":"40"},{"size":100,"mtime":1617810846798,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"v5yfjk",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\vamik\\Documents\\mp\\src\\index.tsx",[],["158","159"],"C:\\Users\\vamik\\Documents\\mp\\src\\serviceWorker.js",[],["160","161"],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Footer\\Footer.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\TopBar\\TopBar.tsx",["162"],"import React from 'react';\nimport { serverPath, colorMappings } from '../../utils';\nimport { Icon, Popup, Button, Dropdown } from 'semantic-ui-react';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { LoginModal } from '../Modal/LoginModal';\nimport axios from 'axios';\n\nexport class NewRoomButton extends React.Component<{ size?: string }> {\n  createRoom = async () => {\n    const response = await window.fetch(serverPath + '/createRoom', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({}),\n    });\n    const data = await response.json();\n    const { name } = data;\n    window.location.href = '/#' + name;\n    window.location.reload();\n  };\n  render() {\n    return (\n      <Popup\n        \n        trigger={\n          <Button\n            color=\"orange\"\n            size={this.props.size as any}\n            icon\n            labelPosition=\"left\"\n            onClick={this.createRoom}\n            className=\"toolButton\"\n          >\n            <Icon name=\"certificate\" />\n            New Room\n          </Button>\n        }\n      />\n    );\n  }\n}\n\nexport class TagBoardButton extends React.Component<{ size?: string }> {\n\n  render() {\n    return (\n      <Popup\n        \n        trigger={\n          <a href=\"https://miro.com/app/dashboard/\">\n          <Button\n            color=\"orange\"\n            size={this.props.size as any}\n            icon\n            labelPosition=\"left\"\n            className=\"toolButton\"\n          >\n            <Icon name=\"certificate\" />\n            Tagboard\n          </Button>\n          </a>\n        }\n      />\n    );\n  }\n}\n\n\n\n\n\nexport class SignInButton extends React.Component<{\n  user: firebase.User | undefined;\n  fluid?: boolean;\n}> {\n  public state = { isLoginOpen: false };\n\n  facebookSignIn = async () => {\n    const provider = new firebase.auth.FacebookAuthProvider();\n    await firebase.auth().signInWithPopup(provider);\n  };\n\n  googleSignIn = async () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    await firebase.auth().signInWithPopup(provider);\n  };\n\n  signOut = () => {\n    firebase.auth().signOut();\n    window.location.reload();\n  };\n\n  render() {\n    if (this.props.user) {\n      return (\n        <Button\n          style={{ height: '36px' }}\n          icon\n          labelPosition=\"left\"\n          onClick={this.signOut}\n          fluid={this.props.fluid}\n        >\n          <Icon name=\"sign out\" />\n          Sign out\n        </Button>\n      );\n    }\n    return (\n      <React.Fragment>\n        {this.state.isLoginOpen && (\n          <LoginModal\n            closeLogin={() => this.setState({ isLoginOpen: false })}\n          />\n        )}\n        <Popup\n          basic\n          trigger={\n            <Dropdown\n              style={{ height: '36px' }}\n              icon=\"sign in\"\n              labeled\n              className=\"icon\"\n              button\n              text=\"Sign in\"\n              fluid={this.props.fluid}\n            >\n              <Dropdown.Menu>\n\n                <Dropdown.Item onClick={this.googleSignIn}>\n                  <Icon name=\"google\" />\n                  Google\n                </Dropdown.Item>\n                <Dropdown.Item\n                  onClick={() => this.setState({ isLoginOpen: true })}\n                >\n                  <Icon name=\"mail\" />\n                  Email\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport class ListRoomsButton extends React.Component<{\n  user: firebase.User | undefined;\n}> {\n  public state = { rooms: [] as PermanentRoom[] };\n\n  componentDidMount() {\n    this.refreshRooms();\n  }\n\n  refreshRooms = async () => {\n    if (this.props.user) {\n      const token = await this.props.user.getIdToken();\n      const response = await axios.get(\n        serverPath + `/listRooms?uid=${this.props.user?.uid}&token=${token}`\n      );\n      this.setState({ rooms: response.data });\n    }\n  };\n\n  deleteRoom = async (roomId: string) => {\n    if (this.props.user) {\n      const token = await this.props.user.getIdToken();\n      await axios.delete(\n        serverPath +\n          `/deleteRoom?uid=${this.props.user?.uid}&token=${token}&roomId=${roomId}`\n      );\n      this.setState({\n        rooms: this.state.rooms.filter((room) => room.roomId !== roomId),\n      });\n      this.refreshRooms();\n    }\n  };\n\n  render() {\n    return (\n      <Dropdown\n        style={{ height: '36px' }}\n        icon=\"group\"\n        labeled\n        className=\"icon\"\n        button\n        text=\"My Rooms\"\n        onClick={this.refreshRooms}\n      >\n        <Dropdown.Menu>\n          {this.state.rooms.length === 0 && (\n            <Dropdown.Item disabled>You have no permanent rooms.</Dropdown.Item>\n          )}\n          {this.state.rooms.map((room: any) => {\n            return (\n              <Dropdown.Item\n                link\n                href={\n                  room.vanity\n                    ? '/r/' + room.vanity\n                    : '/' + room.roomId.replace('/', '#')\n                }\n                onClick={() => {\n                  if (!room.vanity) {\n                    setTimeout(() => window.location.reload(), 100);\n                  }\n                }}\n              >\n                <div style={{ display: 'flex' }}>\n                  {room.vanity\n                    ? `/r/${room.vanity}`\n                    : room.roomId.replace('/', '#')}\n                  <div style={{ marginLeft: 'auto', paddingLeft: '20px' }}>\n                    <Popup\n                      content=\"Delete room\"\n                      trigger={\n                        <Icon\n                          onClick={(e: React.MouseEvent) => {\n                            e.stopPropagation();\n                            this.deleteRoom(room.roomId);\n                          }}\n                          name=\"x\"\n                          color=\"red\"\n                        />\n                      }\n                    />\n                  </div>\n                </div>\n              </Dropdown.Item>\n            );\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport class TopBar extends React.Component<{\n  user?: any;\n  hideNewRoom?: boolean;\n  hideSignin?: boolean;\n  hideMyRooms?: boolean;\n}> {\n  render() {\n    return (\n      <React.Fragment>\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            padding: '1em',\n            paddingBottom: '0px',\n          }}\n        >\n          <a href=\"/\" style={{ display: 'flex' }}>\n            <div\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <div\n                style={{\n                  textTransform: 'uppercase',\n                  fontWeight: 700,\n                  color: '#d0216a',\n                  fontSize: '30px',\n                  lineHeight: '30px',\n                }}\n              >\n                Myntra\n              </div>\n              <div\n                style={{\n                  textTransform: 'uppercase',\n                  fontWeight: 700,\n                  color: '#ba7821',\n                  fontSize: '30px',\n                  lineHeight: '30px',\n                  marginLeft: 'auto',\n                }}\n              >\n                Party\n              </div>\n            </div>\n          </a>\n          <div\n            style={{\n              display: 'flex',\n              marginLeft: '10px',\n              alignItems: 'center',\n            }}\n          ></div>\n          <div\n            style={{\n              display: 'flex',\n              marginLeft: 'auto',\n            }}\n          >\n            {<NewRoomButton />}\n            {!this.props.hideMyRooms && this.props.user && (\n              <ListRoomsButton user={this.props.user} />\n            )}\n            {!this.props.hideSignin && <SignInButton user={this.props.user} />}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","C:\\Users\\vamik\\Documents\\mp\\src\\components\\PrivacyTerms\\PrivacyTerms.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Debug\\Debug.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\App\\index.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Home\\index.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\LoginModal.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\utils\\index.ts",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\App\\App.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Home\\Home.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\PasswordModal.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\ErrorModal.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\SubscribeButton\\SubscribeButton.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\utils\\generateName.ts",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\VBrowserModal.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\SubscribeModal.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\MultiStreamModal.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Settings\\SettingsTab.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Controls\\Controls.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\SearchComponent\\SearchComponent.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\ComboBox\\ComboBox.tsx",["163","164"],"import React from 'react';\nimport { DropdownProps, Menu, Input, Icon } from 'semantic-ui-react';\nimport { debounce, getYouTubeResults } from '../../utils';\nimport { examples } from '../../utils/examples';\nimport { YouTubeSearchResult } from '../SearchResult/SearchResult';\n\ninterface ComboBoxProps {\n  setMedia: Function;\n  currentMedia: string;\n  getMediaDisplayName: Function;\n  launchMultiSelect: Function;\n  mediaPath: string | undefined;\n  streamPath: string | undefined;\n  disabled?: boolean;\n}\n\nexport class ComboBox extends React.Component<ComboBoxProps> {\n  state = {\n    inputMedia: undefined as string | undefined,\n    results: undefined,\n    loading: false,\n    lastResultTimestamp: Number(new Date()),\n  };\n  debounced: any = null;\n\n  setMedia = (e: any, data: DropdownProps) => {\n    window.setTimeout(\n      () => this.setState({ inputMedia: undefined, results: undefined }),\n      300\n    );\n    this.props.setMedia(e, data);\n  };\n\n  doSearch = async (e: any) => {\n    e.persist();\n    this.setState({ inputMedia: e.target.value }, () => {\n      if (!this.debounced) {\n        this.debounced = debounce(async () => {\n          this.setState({ loading: true });\n          const query: string = this.state.inputMedia || '';\n          let timestamp = Number(new Date());\n          let results: JSX.Element[] | undefined = undefined;\n          if (query === '' || (query && query.startsWith('http'))) {\n            results = examples.map((option: any) => (\n              <Menu.Item\n                key={option.url}\n                onClick={(e: any) => this.setMedia(e, { value: option.url })}\n              >\n                {option.url}\n              </Menu.Item>\n            ));\n          } else {\n            const data = await getYouTubeResults(query);\n            results = data.map((result) => (\n              <YouTubeSearchResult\n                key={result.url}\n                {...result}\n                setMedia={this.setMedia}\n              />\n            ));\n          }\n          if (timestamp > this.state.lastResultTimestamp) {\n            this.setState({\n              loading: false,\n              results,\n              lastResultTimestamp: timestamp,\n            });\n          }\n        }, 500);\n      }\n      this.debounced();\n    });\n  };\n\n  render() {\n    return <div></div>;\n  }\n}\n","C:\\Users\\vamik\\Documents\\mp\\src\\components\\TopBar\\index.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\index.ts",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Settings\\index.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\VideoChat\\index.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\utils\\examples.ts",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Chat\\index.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Settings\\LocalSettings.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Modal\\PermanentRoomModal.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\SearchResult\\SearchResult.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\base.ts",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\events.ts",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\VBrowser.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\VideoChat\\VideoChat.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\Chat\\Chat.tsx",[],"C:\\Users\\vamik\\Documents\\mp\\src\\components\\VBrowser\\data.ts",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":2,"column":22,"nodeType":"171","messageId":"172","endLine":2,"endColumn":35},{"ruleId":"169","severity":1,"message":"173","line":2,"column":31,"nodeType":"171","messageId":"172","endLine":2,"endColumn":36},{"ruleId":"169","severity":1,"message":"174","line":2,"column":38,"nodeType":"171","messageId":"172","endLine":2,"endColumn":42},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"@typescript-eslint/no-unused-vars","'colorMappings' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Icon' is defined but never used.","no-global-assign","no-unsafe-negation"]